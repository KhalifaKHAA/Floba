import { sticker } from '../lib/sticker.js';
import axios from 'axios';
import uploadImage from '../lib/uploadImage.js';
import { webp2png } from '../lib/webp2mp4.js';

let handler = async (m, { conn, text }) => {
Â Â Â  let q = m.quoted ? m.quoted : m;
Â Â Â  let mime = (q.msg || q).mimetype || '';
Â Â Â  const { mtype } = m;

Â Â Â  let pp = await conn.profilePictureUrl(m.sender, 'image').catch(() => 'https://telegra.ph/file/a2ae6cbfa40f6eeea0cf1.jpg');

Â Â Â  if (m.quoted) {
Â Â Â Â Â Â Â  conn.sendMessage(m.chat, {
Â Â Â Â Â Â Â Â Â Â Â  react: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: "ðŸ•›",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key: m.key,
Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â  });

Â Â Â Â Â Â Â  if (q.mtype === 'imageMessage' || q.mtype === 'stickerMessage') {
Â Â Â Â Â Â Â Â Â Â Â  let img = await q.download();
Â Â Â Â Â Â Â Â Â Â Â  let up;
Â Â Â Â Â Â Â Â Â Â Â  if (/webp/g.test(mime)) {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  up = await webp2png(img);
Â Â Â Â Â Â Â Â Â Â Â  } else if (/image/g.test(mime)) {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  up = await uploadImage(img);
Â Â Â Â Â Â Â Â Â Â Â  }

Â Â Â Â Â Â Â Â Â Â Â  let obj = {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  type: "quote",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  format: "png",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  backgroundColor: "#ffff",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  width: 512,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  height: 768,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  scale: 2,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  messages: [{
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  entities: [],
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  media: { url: up },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  avatar: true,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  from: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  id: 1,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  name: m.name,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  photo: { url: pp }
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: q ? q.text : text || '',
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  replyMessage: {}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  }]
Â Â Â Â Â Â Â Â Â Â Â  };

Â Â Â Â Â Â Â Â Â Â Â  let buffer = await Quotly(obj);
Â Â Â Â Â Â Â Â Â Â Â  let stickerFile = await sticker(buffer, false, global.packname, global.author);
Â Â Â Â Â Â Â Â Â Â Â  if (stickerFile) {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  return conn.sendFile(m.chat, stickerFile, 'Quotly.webp', '', m).then(() => {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  conn.sendMessage(m.chat, {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  react: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: "âœ…",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key: m.key,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  });
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  });
Â Â Â Â Â Â Â Â Â Â Â  }

Â Â Â Â Â Â Â  } else {
Â Â Â Â Â Â Â Â Â Â Â  let obj = {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  type: "quote",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  format: "png",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  backgroundColor: "#ffff",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  width: 512,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  height: 768,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  scale: 2,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  messages: [{
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  entities: [],
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  avatar: true,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  from: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  id: 1,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  name: m.name,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  photo: { url: pp }
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: q ? q.text : text || '',
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  replyMessage: {}
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  }]
Â Â Â Â Â Â Â Â Â Â Â  };

Â Â Â Â Â Â Â Â Â Â Â  const buffer = await Quotly(obj);
Â Â Â Â Â Â Â Â Â Â Â  let stickerFile = await sticker(buffer, false, global.packname, global.author);
Â Â Â Â Â Â Â Â Â Â Â  if (stickerFile) {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  return conn.sendFile(m.chat, stickerFile, 'Quotly.webp', '', m).then(() => {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  conn.sendMessage(m.chat, {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  react: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: "âœ…",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key: m.key,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  });
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  });
Â Â Â Â Â Â Â Â Â Â Â  }
Â Â Â Â Â Â Â  }

Â Â Â  } else {
Â Â Â Â Â Â Â  conn.sendMessage(m.chat, {
Â Â Â Â Â Â Â Â Â Â Â  react: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: "ðŸ•›",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key: m.key,
Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â  });

Â Â Â Â Â Â Â  let obj2 = {
Â Â Â Â Â Â Â Â Â Â Â  type: "quote",
Â Â Â Â Â Â Â Â Â Â Â  format: "png",
Â Â Â Â Â Â Â Â Â Â Â  backgroundColor: "#ffff",
Â Â Â Â Â Â Â Â Â Â Â  width: 512,
Â Â Â Â Â Â Â Â Â Â Â  height: 768,
Â Â Â Â Â Â Â Â Â Â Â  scale: 2,
Â Â Â Â Â Â Â Â Â Â Â  messages: [{
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  entities: [],
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  avatar: true,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  from: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  id: 1,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  name: m.name,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  photo: { url: pp }
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: text || '',
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  replyMessage: {}
Â Â Â Â Â Â Â Â Â Â Â  }]
Â Â Â Â Â Â Â  };

Â Â Â Â Â Â Â  const buffer = await Quotly(obj2);
Â Â Â Â Â Â Â  let stickerFile2 = await sticker(buffer, false, global.packname, global.author);
Â Â Â Â Â Â Â  if (stickerFile2) {
Â Â Â Â Â Â Â Â Â Â Â  return conn.sendFile(m.chat, stickerFile2, 'Quotly.webp', '', m).then(() => {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  conn.sendMessage(m.chat, {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  react: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  text: "âœ…",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  key: m.key,
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  });
Â Â Â Â Â Â Â Â Â Â Â  });
Â Â Â Â Â Â Â  }
Â Â Â  }
};

handler.help = ['qc2'];
handler.tags = ['sticker'];
handler.command = /^(qc2|quotly2)$/i;

handler.limit = true;

export default handler;

async function Quotly(obj) {
Â Â Â  let json;

Â Â Â  try {
Â Â Â Â Â Â Â  json = await axios.post(
Â Â Â Â Â Â Â Â Â Â Â  "https://bot.lyo.su/quote/generate",
Â Â Â Â Â Â Â Â Â Â Â  obj,
Â Â Â Â Â Â Â Â Â Â Â  {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  headers: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  "Content-Type": "application/json",
Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â Â Â Â Â  },
Â Â Â Â Â Â Â  );
Â Â Â  } catch (e) {
Â Â Â Â Â Â Â  return e;
Â Â Â  }

Â Â Â  const results = json.data.result.image;
Â Â Â  const buffer = Buffer.from(results, "base64");
Â Â Â  return buffer;
}
